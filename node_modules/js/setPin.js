const csvParser = require('csv-parser');
const fs = require("fs");
const path = require("path");
let startString = "function mapPins(){";
let filePath = path.resolve(__dirname, '../../data/complete.csv');

fs.appendFile(filePath, startString, (err) => {
    if (err) {
        console.log(`Unable to append to file. Error: ${err}`);
        return;
    }

    console.log('Successfully appended to file.');
});

const results = [];
function randHash() {
    let str = Math.random().toString(); // ← Point 5
    let hash = 0;
    for (let i = 0; i < str.length; i++) {
        hash = ((hash << 5) - hash) + str.charCodeAt(i);
        hash = hash & hash;
    }
    return Math.round(1000 * Math.abs(hash) / 48);
}
function csvToTextFile(file) {
    let csvData = [];
    let pins = [];
    var start = "function mapPins(){"
    var end = "}"
    fs.createReadStream(file) // ← Point 3
        .pipe(csvParser())
        .on('data', function (row) {
            csvData.push(row);
            var id = row['latitude'].toString().slice(4,10); // ← Point 4
            var line ="var pin" + id + randHash() + // ← Point 6
                "=Microsoft.Maps.Pushpin(" + row['latitude']
                + ',' + row['longitude'] + ")\n" + "maps.entities.push" +
                "(" + id + ")";
            console.log(line + " written to file output.txt");
            fs.appendFile('../../data/output.txt', line + '\r\n', function (err) { // ← Point 2
                if (err) throw err;
            })
        })
    console.log('done');
    fs.appendFile(filePath, "}", (err) => {
        if (err) {
            console.log(`Unable to append to file. Error: ${err}`);
            return;
        }
})}

csvToTextFile('../../data/complete.csv');
